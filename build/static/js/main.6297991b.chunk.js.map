{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","API.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Buttons.styles.js","components/Button/index.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","movieId","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","value","rating","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","button","Button","callback","onClick","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","useHomeFetch","console","log","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6297991b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.35f4d399.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.e7029961.svg\";","import styled from 'styled-components';\r\n\r\n\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: var(--maxWidth);\r\n    padding: 20px 0;\r\n    margin: 0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n    width: 200px;\r\n    @media screen and (max-width: 500px){\r\n        width: 150px;\r\n    }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n    width: 100px;\r\n    @media screen and (max-width: 500px){\r\n        width: 80px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport RMDBLogo from '../../images/react-movie-logo.svg';\r\nimport TMDBLogo from '../../images/tmdb_logo.svg';\r\n\r\nimport {Wrapper , Content, LogoImg, TMDBLogoImg } from './Header.styles';\r\n\r\nconst Header = () =>{\r\n    return (\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to=\"/\">\r\n                <LogoImg src={RMDBLogo} alt=\"rmdb-logo\"/>\r\n            </Link>\r\n            <LogoImg src={RMDBLogo} alt=\"rmdb-logo\"/>\r\n            <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\"/>\r\n        </Content>\r\n    </Wrapper>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","// Configuration for TMDB API\r\n// Read more about the API here: https://developers.themoviedb.org/\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\r\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\r\n// For login and voting\r\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\r\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\r\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\r\n\r\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\r\n// Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = 'w1280';\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = 'w780';\r\n\r\nexport {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL,\r\n};\r\n","import {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL\r\n} from './config';\r\n\r\nconst defaultConfig = {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\nconst apiSettings = {\r\n  fetchMovies: async (searchTerm, page) => {\r\n    const endpoint = searchTerm\r\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\r\n      : `${POPULAR_BASE_URL}&page=${page}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchMovie: async movieId => {\r\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchCredits: async movieId => {\r\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n    return await (await fetch(creditsEndpoint)).json();\r\n  },\r\n  // Bonus material below for login\r\n  getRequestToken: async () => {\r\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\r\n    return reqToken.request_token;\r\n  },\r\n  authenticate: async (requestToken, username, password) => {\r\n    const bodyData = {\r\n      username,\r\n      password,\r\n      request_token: requestToken\r\n    };\r\n    // First authenticate the requestToken\r\n    const data = await (\r\n      await fetch(LOGIN_URL, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify(bodyData)\r\n      })\r\n    ).json();\r\n    // Then get the sessionId with the requestToken\r\n    if (data.success) {\r\n      const sessionId = await (\r\n        await fetch(SESSION_ID_URL, {\r\n          ...defaultConfig,\r\n          body: JSON.stringify({ request_token: requestToken })\r\n        })\r\n      ).json();\r\n      return sessionId;\r\n    }\r\n  },\r\n  rateMovie: async (sessionId, movieId, value) => {\r\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\r\n\r\n    const rating = await (\r\n      await fetch(endpoint, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify({ value })\r\n      })\r\n    ).json();\r\n\r\n    return rating;\r\n  }\r\n};\r\n\r\nexport default apiSettings;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    background: linear-gradient(\r\n        to bottom, rgba(0,0,0,0)\r\n        41%, rgba(0,0,0,0.65)\r\n        100%\r\n    ),\r\n    url(${({image}) => image}), var(--darkGrey);\r\n    background-size: 100%;\r\n    background-position: center;\r\n    height: 600px;\r\n    position: relative;\r\n    animation: animateHeroImage 1s;\r\n\r\n    @keyframes animateHeroImage{\r\n        from{\r\n            opacity: 0;\r\n        }\r\n        to{\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    padding: 20px;\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n\r\n`;\r\n\r\nexport const Text = styled.div`\r\n    z-index: 100;\r\n    max-width: 700px;\r\n    position: absolute;\r\n    bottom: 40px;\r\n    margin-right: 20px;\r\n    min-height: 100px;\r\n    color: var(--white);\r\n\r\n    h1{\r\n        font-size: var(--fontSuperBig);\r\n\r\n        @media screen and (max-width: 720px){\r\n            font-size: var(--fontBig);\r\n        }\r\n    }\r\n    p{\r\n        font-size: var(--fontMed);\r\n\r\n        @media screen and (max-width: 720px){\r\n            font-size: var(--fontSmall);\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 720){\r\n        max-width: 100%;\r\n    }\r\n`;","import React from \"react\";\r\n\r\n//Styles \r\nimport { Wrapper , Content, Text } from \"./HeroImage.styles\";\r\n\r\n\r\nconst HeroImage= ({image, title, text})=>(\r\n    <Wrapper image={image}>\r\n        <Content>\r\n            <Text>\r\n                <h1>{title}</h1>\r\n                <p>{text}</p>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default HeroImage;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n\r\n    h1{\r\n        color: var(--medGrey);\r\n\r\n        @media screen and (max-width: 768px){\r\n            font-size: var(--fontBig);\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(200px,1fr));\r\n    grid-gap: 2rem;\r\n    \r\n`;","import React from \"react\";\r\n\r\n//Styles \r\nimport {Wrapper , Content} from './Grid.styles';\r\n\r\nconst Grid = ({ header , children}) => (\r\n    <Wrapper>\r\n        <h1>{header}</h1>\r\n        <Content>\r\n            {children}\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Grid;","import styled from 'styled-components';\r\n\r\nexport const Image = styled.img`\r\n    width: 100%;\r\n    max-width: 720px;\r\n    transition: all 0.3s;\r\n    object-fit: cover;\r\n    border-radius: 20px;\r\n    animation: animateThumb 0.5s;\r\n\r\n    :hover{\r\n        opacity: 0.8;\r\n    }\r\n\r\n    @keyframes animateThumb{\r\n        from{\r\n            opacity: 0;\r\n        }\r\n        to{\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n//Styles \r\nimport { Image } from './Thumb.styles';\r\n\r\nconst Thumb = ({image ,movieId, clickable})=>(\r\n    <div>\r\n        {clickable ? (\r\n            <Link to={`/${movieId}`}>\r\n                <Image src={image} alt='movie-thumb'/>\r\n            </Link>\r\n        ): (<Image src={image} alt='movie-thumb'/>)\r\n        }\r\n    </div>\r\n)\r\n\r\nexport default Thumb;","import { Spinner } from \"./Spinner.styles\";\r\n\r\nexport default Spinner;","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n    border: 5px solid var(--lightGrey);\r\n    border-top: 5px solid var(--medGrey);\r\n    border-radius: 50%;\r\n    width: 50px;\r\n    height: 50px;\r\n    animation: spin 0.8s linear infinite;\r\n    margin: 20px auto;\r\n\r\n    @keyframes spin{\r\n        0%{\r\n            tranform: rotate(0deg);\r\n        }\r\n        100%{\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n\r\n`;","export default __webpack_public_path__ + \"static/media/search-icon.bb4c697f.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100px;\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    position: relative;\r\n    max-width: var(--maxWidth);\r\n    width: 100%;\r\n    height: 55px;\r\n    background: var(--medGrey);\r\n    margin: 0 auto;\r\n    border-radius: 40px;\r\n    color: var(--white);\r\n\r\n\r\n    img{\r\n        position: absolute;\r\n        left: 15px;\r\n        top: 14px;\r\n        width: 30px;\r\n    }\r\n\r\n    input{\r\n        font-size: var(--fontBig);\r\n        position: absolute;\r\n        left: 0;\r\n        margin: 8px 0;\r\n        padding: 0 0 0 60px;\r\n        border: 0;\r\n        width: 95%;\r\n        background: transparent;\r\n        height: 40px;\r\n        color: var(--white);\r\n\r\n        :focus{\r\n            outline: none;\r\n        }\r\n    }\r\n`;\r\n\r\n","import React, {useState, useEffect , useRef } from 'react';\r\n\r\n//Image\r\nimport searchIcon from '../../images/search-icon.svg';\r\n\r\n//Styles\r\nimport { Wrapper, Content } from '../SearchBar/SearchBar.styles';\r\n\r\n\r\nconst SearchBar = ({ setSearchTerm})=>{\r\n    const [state, setState] = useState('');\r\n    const initial = useRef(true);\r\n\r\n    useEffect(()=>{\r\n        if(initial.current){\r\n            initial.current = false;\r\n            return;\r\n        }\r\n        const timer = setTimeout(()=>{\r\n            setSearchTerm(state);\r\n        },500); \r\n\r\n        return ()=>clearTimeout(timer)\r\n    },[setSearchTerm, state])\r\n\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <img src={searchIcon} alt='search-icon'/>\r\n                <input\r\n                    type='text'\r\n                    placeholder=\"Search Movie\"\r\n                    onChange={\r\n                        event=> setState(event.currentTarget.value)\r\n                    }\r\n                    value={state}\r\n                />\r\n            </Content>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n    display: block;\r\n    background: var(--darkGrey);\r\n    width: 25%;\r\n    min-width: 200px;\r\n    height: 60px;\r\n    border-radius: 30px;\r\n    color: var(--white);\r\n    border: 0;\r\n    font-size: var(--fontBig);\r\n    margin: 20px auto;\r\n    transition: all 0.3s;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    :hover{\r\n        opacity: 0.8;\r\n    }\r\n\r\n`;","import React from 'react';\r\n\r\n//Styles \r\nimport {Wrapper} from './Buttons.styles';\r\n\r\nconst Button = ({text, callback})=>(\r\n    <Wrapper type='button' onClick={callback}>\r\n        {text}\r\n    </Wrapper>\r\n);\r\n\r\nexport default Button;","import { useState, useEffect, useRef } from \"react\";\r\n\r\n//API \r\nimport API from '../API';\r\n\r\nconst initialState = {\r\n    page: 0, \r\n    results: [],\r\n    total_pages: 0,\r\n    total_results: 0\r\n};\r\n\r\n\r\nexport const useHomeFetch = () =>{\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [state, setState] = useState(initialState);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n    const fetchMovies = async( page, searchTerm = \"\")=>{\r\n        try{\r\n            setError(false);\r\n            setLoading(true);\r\n            \r\n            const movies = await API.fetchMovies(searchTerm, page);\r\n            setState(prev =>({\r\n                ...movies,\r\n                results: \r\n                    page>1?[...prev.results, ...movies.results]: [...movies.results]\r\n            }));\r\n            \r\n        }catch(error){\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n    };\r\n\r\n    //Initial and Search\r\n    useEffect(()=>{\r\n        setState(initialState);\r\n        fetchMovies(1,searchTerm);\r\n    },[searchTerm]);\r\n\r\n    //Load More \r\n    useEffect(()=>{\r\n        if(!isLoadingMore) return;\r\n\r\n        fetchMovies(state.page +1, searchTerm);\r\n        setIsLoadingMore(false); \r\n    }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n    return {state, loading, error,searchTerm, setSearchTerm, setIsLoadingMore};\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React, { useState, useEffect } from \"react\";\r\n//API \r\nimport API from '../API';\r\n\r\n//Config \r\nimport {POSTER_SIZE , BACKDROP , IMAGE_BASE_URL, BACKDROP_SIZE } from '../config';\r\n\r\n//Components\r\nimport HeroImage from \"./HeroImage\";\r\nimport Grid from './Grid';\r\nimport Thumb from \"./Thumb\";\r\nimport Spinner from \"./Spinner\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport Button from \"./Button\";\r\n\r\n\r\n//Hook \r\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\r\n\r\n\r\n//Image \r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Home = () =>{\r\n    const {state, loading, error , searchTerm, setSearchTerm, setIsLoadingMore} = useHomeFetch();\r\n    console.log(state);\r\n\r\n    if(error) return <div>Something went wrong ....</div>;\r\n\r\n\r\n    return (\r\n        <>\r\n            {!searchTerm && state.results[0]?\r\n                <HeroImage\r\n                    image = {`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n                    title = {state.results[0].original_title}\r\n                    text = {state.results[0].overview}\r\n                />\r\n                :null}\r\n            <SearchBar setSearchTerm={setSearchTerm}/>    \r\n            <Grid header={searchTerm ? 'Search Result' : \"Popular Movies\"}> \r\n            {\r\n                state.results.map(movie =>(\r\n                    <Thumb\r\n                        key={movie.id}\r\n                        clickable\r\n                        image={\r\n                            movie.poster_path?\r\n                                IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                                : NoImage\r\n                        }\r\n                        movieId={movie.id}\r\n                       /> \r\n                ))\r\n            }\r\n            </Grid>\r\n            {loading && <Spinner/>}\r\n            {\r\n                state.page < state.total_pages && !loading && (\r\n                    <Button text='Load More' callback={() => setIsLoadingMore(true)} />\r\n                )\r\n             }\r\n        </>\r\n    );\r\n}\r\nexport default Home;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 70px;\r\n    background: var(--medGrey);\r\n    color: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    max-width: var(--maxWidth);\r\n    padding: 0 20px;\r\n\r\n    span{\r\n        font-size: var(--fontMed);\r\n        color: var(--white);\r\n        padding-right: 10px;\r\n\r\n        @media screen and (max-width: 768px){\r\n            font-size: var(--fontSmall);\r\n        }\r\n    }\r\n\r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Styles \r\nimport {Wrapper , Content} from './BreadCrumb.styles';\r\n\r\nconst BreadCrumb = ({movieTitle}) =>(\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to='/'>\r\n                <span>Home</span>\r\n            </Link>\r\n            <span>|</span>\r\n            <span>{movieTitle}</span>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default BreadCrumb;","import styled from \"styled-components\";\r\n\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\r\n\r\nexport const Wrapper = styled.div`\r\n    background: ${({ backdrop })=>(\r\n        backdrop ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop}')`: '#000')};\r\n    background-size: cover;    \r\n    background-position: center;\r\n    padding: 40px 20px;\r\n    animation: animateMovieInfo 1s;\r\n\r\n    @keyframes animateMovieInfo{\r\n        from{\r\n            opacity: 0;\r\n        }\r\n        to{\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n    background: rgba(0 ,0 ,0 ,0.7);\r\n    border-radius: 20px;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: block;\r\n        max-height: none;\r\n    }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n    width: 100%;\r\n    padding: 20px 40px;\r\n    color: var(--white);\r\n    overflow: hidden;\r\n\r\n    .rating-directors{\r\n        display: flex;\r\n        justify-content: flex-start;\r\n    }\r\n\r\n    .score{\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 35px;\r\n        height: 35px;\r\n        background: #fff;\r\n        color: #000;\r\n        font-weight: 800;\r\n        border-radius: 50%;\r\n        margin: 0;\r\n    }\r\n\r\n    .directors{\r\n        margin: 0 0 0 40px;\r\n\r\n        p{\r\n            margin: 0;\r\n        }\r\n    }\r\n    h1{\r\n        @media screen and (max-width: 768px){\r\n            font-size: var(--fontBig);\r\n        }\r\n    }\r\n`;","import React from 'react';\r\n//Component\r\nimport Thumb from '../Thumb';\r\n\r\n//Config \r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\n//Image\r\nimport NoImage from '../../images/no_image.jpg';\r\n\r\n//Styles\r\nimport {Wrapper , Content, Text} from './MovieInfo.styles';\r\n\r\nconst MovieInfo = ({movie})=>(\r\n    <Wrapper backdrop={movie.backdrop_path}>\r\n        <Content>\r\n            <Thumb\r\n            image={\r\n                movie.poster_path?\r\n                `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                :NoImage\r\n            }\r\n            clickable={false}\r\n            />\r\n            <Text>\r\n                <h1>{movie.title}</h1>\r\n                <h3>PLOT</h3>\r\n                <p>{movie.overview}</p>\r\n\r\n                <div className=\"rating-directors\">\r\n                    <div>\r\n                        <h3>RATING</h3>\r\n                        <div className=\"score\">{movie.vote_average}</div>\r\n                    </div>\r\n                    <div className=\"directors\">\r\n                        <h3>DIRECTOR{movie.directors.length>1? \"S\" : ''}</h3>\r\n                        {movie.directors.map(director=>(\r\n                            <p key={director.credit_id}>{director.name}</p>\r\n                        ))}\r\n                    </div>\r\n\r\n                </div>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default MovieInfo;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n//Config \r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\n\r\n//Components\r\nimport BreadCrumb from './BreadCrumb';\r\nimport Grid from './Grid';\r\nimport Spinner from './Spinner';\r\nimport MovieInfo from './MovieInfo';\r\n\r\n\r\n//Hook\r\nimport {useMovieFetch} from '../hooks/useMovieFetch';\r\n\r\n//Images\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Movie = () => {\r\n\r\n    const {movieId} = useParams();\r\n\r\n\r\n    const {state: movie, loading, error} = useMovieFetch(movieId);\r\n\r\n\r\n    if(loading) return <Spinner/>\r\n\r\n    if(error) return <div>Something Went Wrong....</div>;\r\n\r\n    return (\r\n        <>\r\n            <BreadCrumb movieTitle={movie.original_title}/>\r\n            <MovieInfo movie={movie} />\r\n        </>\r\n    )\r\n\r\n\r\n};\r\n\r\nexport default Movie;","import { useState, useEffect } from \"react\";\r\nimport API from '../API';\r\n\r\nexport const useMovieFetch = (movieId) =>{\r\n    const [state, setState] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        const fetchMovie = async()=>{\r\n            try{\r\n                setLoading(true);\r\n                setError(false);\r\n\r\n                const movie = await API.fetchMovie(movieId);\r\n                const credits = await API.fetchCredits(movieId);\r\n                //Get Directors only\r\n                const directors = credits.crew.filter(\r\n                    member => member.job === 'Director'\r\n                );\r\n                setState({\r\n                    ...movie,\r\n                    actors: credits.cast,\r\n                    directors\r\n                });\r\n                setLoading(false);\r\n\r\n            }catch(error){\r\n                setError(true);\r\n            }\r\n        };\r\n        fetchMovie();\r\n\r\n\r\n    },[movieId])\r\n\r\n    return {state, loading, error};\r\n};","import React from 'react';\r\n\r\nconst NotFound = () => <div>Not Found</div>;\r\n\r\nexport default NotFound;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    :root{\r\n        --maxWidth: 1280px;\r\n        --white: #fff;\r\n        --lightGrey: #eee;\r\n        --medGrey: #353535;\r\n        --darkGrey: #1c1c1c;\r\n        --fontSuperBig: 2.5rem;\r\n        --fontBig: 1.5rem;\r\n        --fontMed: 1.2rem;\r\n        --fontSmall: 1rem;\r\n    }\r\n    *{\r\n        box-sizing: border-box;\r\n        font-family: 'Abel',sans-serif;\r\n    }\r\n\r\n    body{\r\n        margin: 0;\r\n        padding: 0;\r\n\r\n        h1{\r\n            font-size: 2rem;\r\n            font-weight: 600;\r\n            color: var(--white);\r\n        }\r\n\r\n        h3{\r\n            font-size: 1.1rem;\r\n            font-weigth: 600;\r\n        }\r\n        p{\r\n            font-size: 1rem;\r\n            color: var(--white);\r\n        }\r\n    }\r\n`;","import React from 'react';\r\n\r\n//Routing \r\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\r\n\r\n//Components\r\nimport Header from './components/Header';\r\nimport Home from './components/Home';\r\nimport Movie from './components/Movie';\r\nimport NotFound from './components/NotFound';\r\n\r\n\r\n\r\n//Styles\r\nimport {GlobalStyle} from './GlobalStyle';\r\n\r\nconst App= ()=> {\r\n  return (\r\n    <Router>\r\n      <Header/>\r\n\r\n      <Routes>\r\n        <Route path='/' element={<Home/>}/>\r\n        <Route path='/:movieId' element={<Movie/>}/>\r\n        <Route path='/*' element={<NotFound/>}/>\r\n      </Routes>  \r\n      <GlobalStyle/>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}